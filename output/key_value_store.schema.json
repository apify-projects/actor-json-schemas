{
    "$id": "key_value_store.json",
    "title": "JSON schema of Apify Actor key-value store schema",
    "type": "object",
    "properties": {
        "actorKeyValueStoreSchemaVersion": {
            "type": "integer",
            "minimum": 1,
            "maximum": 1,
            "description": "The version of the key-value store schema. It's a required integer and must be exactly 1.",
            "x-intellij-html-description": "<p>The version of the key-value store schema. It's a required integer and must be exactly 1.</p>",
            "markdownDescription": "The version of the key-value store schema. It's a required integer and must be exactly 1."
        },
        "title": {
            "type": "string",
            "description": "The title of the key-value store schema. It's a required string.",
            "x-intellij-html-description": "<p>The title of the key-value store schema. It's a required string.</p>",
            "markdownDescription": "The title of the key-value store schema. It's a required string."
        },
        "description": {
            "type": "string",
            "description": "A description of the key-value store schema. It's an optional string.",
            "x-intellij-html-description": "<p>A description of the key-value store schema. It's an optional string.</p>",
            "markdownDescription": "A description of the key-value store schema. It's an optional string."
        },
        "type": {
            "const": "object",
            "description": "A constant value that must be \"object\", indicating the schema describes a JSON object.",
            "x-intellij-html-description": "<p>A constant value that must be \"object\", indicating the schema describes a JSON object.</p>",
            "markdownDescription": "A constant value that must be \"object\", indicating the schema describes a JSON object."
        },
        "collections": {
            "type": "object",
            "patternProperties": {
                "^": {
                    "type": "object",
                    "properties": {
                        "title": {
                            "type": "string",
                            "description": "The title of the collection. It's an optional string.",
                            "x-intellij-html-description": "<p>The title of the collection. It's an optional string.</p>",
                            "markdownDescription": "The title of the collection. It's an optional string."
                        },
                        "description": {
                            "type": "string",
                            "description": "A description of the collection. It's an optional string.",
                            "x-intellij-html-description": "<p>A description of the collection. It's an optional string.</p>",
                            "markdownDescription": "A description of the collection. It's an optional string."
                        },
                        "contentTypes": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "minItems": 1,
                            "uniqueItems": true,
                            "description": "An array of strings specifying the allowed content types for the files in the collection (e.g., \"application/json\", \"image/jpeg\"). The array must contain at least one unique item. This attribute is required if jsonSchema is present.",
                            "x-intellij-html-description": "<p>An array of strings specifying the allowed content types for the files in the collection (e.g., \"application/json\", \"image/jpeg\"). The array must contain at least one unique item. This attribute is required if <code>jsonSchema</code> is present.</p>",
                            "markdownDescription": "An array of strings specifying the allowed content types for the files in the collection (e.g., \"application/json\", \"image/jpeg\"). The array must contain at least one unique item. This attribute is required if `jsonSchema` is present."
                        },
                        "keyPrefix": {
                            "type": "string",
                            "description": "A string that serves as a prefix for all keys in this collection. It's used when a collection contains multiple files. This attribute is mutually exclusive with key.",
                            "x-intellij-html-description": "<p>A string that serves as a prefix for all keys in this collection. It's used when a collection contains multiple files. This attribute is mutually exclusive with <code>key</code>.</p>",
                            "markdownDescription": "A string that serves as a prefix for all keys in this collection. It's used when a collection contains multiple files. This attribute is mutually exclusive with `key`."
                        },
                        "key": {
                            "type": "string",
                            "description": "A string that is the exact key for a single file in the collection. This is used when a collection contains only one specific file. This attribute is mutually exclusive with keyPrefix.",
                            "x-intellij-html-description": "<p>A string that is the exact key for a single file in the collection. This is used when a collection contains only one specific file. This attribute is mutually exclusive with <code>keyPrefix</code>.</p>",
                            "markdownDescription": "A string that is the exact key for a single file in the collection. This is used when a collection contains only one specific file. This attribute is mutually exclusive with `keyPrefix`."
                        },
                        "jsonSchema": {
                            "$ref": "http://json-schema.org/draft-07/schema#",
                            "description": "A JSON schema object that defines the structure of the JSON content for files in the collection. This is only applicable when contentTypes includes \"application/json\".",
                            "x-intellij-html-description": "<p>A JSON schema object that defines the structure of the JSON content for files in the collection. This is only applicable when <code>contentTypes</code> includes \"application/json\".</p>",
                            "markdownDescription": "A JSON schema object that defines the structure of the JSON content for files in the collection. This is only applicable when `contentTypes` includes \"application/json\"."
                        }
                    },
                    "oneOf": [
                        {
                            "required": [
                                "key"
                            ]
                        },
                        {
                            "required": [
                                "keyPrefix"
                            ]
                        }
                    ],
                    "dependencies": {
                        "jsonSchema": {
                            "properties": {
                                "contentTypes": {
                                    "const": [
                                        "application/json"
                                    ]
                                }
                            },
                            "required": [
                                "contentTypes"
                            ]
                        }
                    },
                    "description": "A property within the collections object that defines the schema for a specific collection. The property name can be any string.",
                    "x-intellij-html-description": "<p>A property within the <code>collections</code> object that defines the schema for a specific collection. The property name can be any string.</p>",
                    "markdownDescription": "A property within the `collections` object that defines the schema for a specific collection. The property name can be any string."
                }
            },
            "description": "A required object where each property represents a collection of files in the key-value store. Each property name is an arbitrary string that identifies the collection.",
            "x-intellij-html-description": "<p>A required object where each property represents a collection of files in the key-value store. Each property name is an arbitrary string that identifies the collection.</p>",
            "markdownDescription": "A required object where each property represents a collection of files in the key-value store. Each property name is an arbitrary string that identifies the collection."
        }
    },
    "required": [
        "actorKeyValueStoreSchemaVersion",
        "title",
        "collections"
    ]
}